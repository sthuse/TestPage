{
  "name": "Day after dataflow",
  "description": "Demo of a dataflow for the Day After Dashboard in a Day.",
  "version": "1.0",
  "culture": "en-US",
  "modifiedTime": "2023-02-25T08:28:34.9280991+00:00",
  "ppdf:outputFileFormat": "Csv",
  "pbi:mashup": {
    "fastCombine": false,
    "allowNativeQueries": false,
    "queriesMetadata": {
      "DimProduct_raw": {
        "queryId": "b2a9c1da-3f2f-49c8-8d59-622dee438105",
        "queryName": "DimProduct_raw",
        "loadEnabled": true
      },
      "DimProductCategory_raw": {
        "queryId": "415d50a7-90b2-45f7-acfb-195f3782dcd8",
        "queryName": "DimProductCategory_raw",
        "loadEnabled": true
      },
      "DimProductSubcategory_raw": {
        "queryId": "a3c281f5-6af9-47fa-913d-77694e2d098c",
        "queryName": "DimProductSubcategory_raw",
        "loadEnabled": true
      },
      "DimCustomer_raw": {
        "queryId": "b8782f36-de41-4e0e-9c85-853fbfca4252",
        "queryName": "DimCustomer_raw",
        "loadEnabled": true
      },
      "DimGeography_raw": {
        "queryId": "cc87ce39-7471-4ffa-abc8-6c5e4ef0e8f7",
        "queryName": "DimGeography_raw",
        "loadEnabled": true
      },
      "DimDate": {
        "queryId": "37f72102-aa25-4005-b517-080c52baecd0",
        "queryName": "DimDate",
        "loadEnabled": true
      },
      "DimEmployee": {
        "queryId": "c2a07242-3c8f-4c3d-bb24-f3934eb7f4f1",
        "queryName": "DimEmployee",
        "loadEnabled": true
      },
      "DimStore": {
        "queryId": "3665add6-e018-4c43-a607-5e2023904cc8",
        "queryName": "DimStore",
        "loadEnabled": true
      },
      "fxGetFile": {
        "queryId": "620769f7-b1ac-4a7c-8998-1d0d38736fe1",
        "queryName": "fxGetFile"
      },
      "fxGetFact": {
        "queryId": "fe44aaaa-36f8-4b69-8c87-ad9972726a82",
        "queryName": "fxGetFact"
      }
    },
    "document": "section Section1;\r\nshared DimProduct_raw = let\n    Source = fxGetFile(\"DimProduct.csv\"),\n    #\"Changed column type\" =\n        Table.TransformColumnTypes(\n            Source,\n            {\n                {\n                    \"ProductKey\",\n                    Int64.Type\n                },\n                {\n                    \"ProductLabel\",\n                    Int64.Type\n                },\n                {\n                    \"ProductName\",\n                    type text\n                },\n                {\n                    \"ProductDescription\",\n                    type text\n                },\n                {\n                    \"ProductSubcategoryKey\",\n                    Int64.Type\n                },\n                {\n                    \"Manufacturer\",\n                    type text\n                },\n                {\n                    \"BrandName\",\n                    type text\n                },\n                {\n                    \"ClassID\",\n                    Int64.Type\n                },\n                {\n                    \"ClassName\",\n                    type text\n                },\n                {\n                    \"StyleID\",\n                    Int64.Type\n                },\n                {\n                    \"StyleName\",\n                    type text\n                },\n                {\n                    \"ColorID\",\n                    Int64.Type\n                },\n                {\n                    \"ColorName\",\n                    type text\n                },\n                {\n                    \"Size\",\n                    type text\n                },\n                {\n                    \"Weight\",\n                    type number\n                },\n                {\n                    \"WeightUnitMeasureID\",\n                    type text\n                },\n                {\n                    \"UnitOfMeasureID\",\n                    Int64.Type\n                },\n                {\n                    \"UnitOfMeasureName\",\n                    type text\n                },\n                {\n                    \"StockTypeID\",\n                    Int64.Type\n                },\n                {\n                    \"StockTypeName\",\n                    type text\n                },\n                {\n                    \"UnitCost\",\n                    type number\n                },\n                {\n                    \"UnitPrice\",\n                    type number\n                }\n            }\n        )\nin\n    #\"Changed column type\";\r\nshared DimProductCategory_raw = let\n    Source = fxGetFile(\"DimProductCategory.csv\"),\n    #\"Changed column type\" =\n        Table.TransformColumnTypes(\n            Source,\n            {\n                {\n                    \"ProductCategoryKey\",\n                    Int64.Type\n                },\n                {\n                    \"ProductCategoryLabel\",\n                    Int64.Type\n                },\n                {\n                    \"ProductCategoryName\",\n                    type text\n                },\n                {\n                    \"ProductCategoryDescription\",\n                    type text\n                }\n            }\n        )\nin\n    #\"Changed column type\";\r\nshared DimProductSubcategory_raw = let\n    Source = fxGetFile(\"DimProductSubcategory.csv\"),\n    #\"Changed column type\" =\n        Table.TransformColumnTypes(\n            Source,\n            {\n                {\n                    \"ProductSubcategoryKey\",\n                    Int64.Type\n                },\n                {\n                    \"ProductSubcategoryLabel\",\n                    Int64.Type\n                },\n                {\n                    \"ProductSubcategoryName\",\n                    type text\n                },\n                {\n                    \"ProductSubcategoryDescription\",\n                    type text\n                },\n                {\n                    \"ProductCategoryKey\",\n                    Int64.Type\n                }\n            }\n        )\nin\n    #\"Changed column type\";\r\nshared DimCustomer_raw = let\n    Source = fxGetFile(\"DimCustomer.csv\"),\n    #\"Changed column type\" =\n        Table.TransformColumnTypes(\n            Source,\n            {\n                {\n                    \"CustomerKey\",\n                    Int64.Type\n                },\n                {\n                    \"GeographyKey\",\n                    Int64.Type\n                },\n                {\n                    \"FirstName\",\n                    type text\n                },\n                {\n                    \"MiddleName\",\n                    type text\n                },\n                {\n                    \"LastName\",\n                    type text\n                },\n                {\n                    \"BirthDate\",\n                    type date\n                },\n                {\n                    \"MaritalStatus\",\n                    type text\n                },\n                {\n                    \"Suffix\",\n                    type text\n                },\n                {\n                    \"Title\",\n                    type text\n                },\n                {\n                    \"EmailAddress\",\n                    type text\n                },\n                {\n                    \"YearlyIncome\",\n                    Int64.Type\n                },\n                {\n                    \"Education\",\n                    type text\n                },\n                {\n                    \"Occupation\",\n                    type text\n                },\n                {\n                    \"AddressLine1\",\n                    type text\n                },\n                {\n                    \"AddressLine2\",\n                    type text\n                },\n                {\n                    \"Phone\",\n                    type text\n                },\n                {\n                    \"DateFirstPurchase\",\n                    type date\n                },\n                {\n                    \"CustomerType\",\n                    type text\n                }\n            }\n        )\nin\n    #\"Changed column type\";\r\nshared DimGeography_raw = let\n    Source = fxGetFile(\"DimGeography.csv\"),\n    #\"Changed column type\" =\n        Table.TransformColumnTypes(\n            Source,\n            {\n                {\n                    \"GeographyKey\",\n                    Int64.Type\n                },\n                {\n                    \"GeographyType\",\n                    type text\n                },\n                {\n                    \"ContinentName\",\n                    type text\n                },\n                {\n                    \"CityName\",\n                    type text\n                },\n                {\n                    \"StateProvinceName\",\n                    type text\n                },\n                {\n                    \"RegionCountryName\",\n                    type text\n                },\n                {\n                    \"Geometry\",\n                    type text\n                }\n            }\n        )\nin\n    #\"Changed column type\";\r\nshared DimDate = let\n    Source = fxGetFile(\"DimDate.csv\"),\n    #\"Changed column type\" =\n        Table.TransformColumnTypes(\n            Source,\n            {\n                {\n                    \"DateKey\",\n                    type date\n                },\n                {\n                    \"Day\",\n                    Int64.Type\n                },\n                {\n                    \"DaySuffix\",\n                    type text\n                },\n                {\n                    \"DayName\",\n                    type text\n                },\n                {\n                    \"DayOfWeek\",\n                    Int64.Type\n                },\n                {\n                    \"DayOfWeekInMonth\",\n                    Int64.Type\n                },\n                {\n                    \"DayOfYear\",\n                    Int64.Type\n                },\n                {\n                    \"IsWeekend\",\n                    Int64.Type\n                },\n                {\n                    \"Week\",\n                    Int64.Type\n                },\n                {\n                    \"ISOweek\",\n                    Int64.Type\n                },\n                {\n                    \"FirstOfWeek\",\n                    type date\n                },\n                {\n                    \"LastOfWeek\",\n                    type date\n                },\n                {\n                    \"WeekOfMonth\",\n                    Int64.Type\n                },\n                {\n                    \"Month\",\n                    Int64.Type\n                },\n                {\n                    \"MonthName\",\n                    type text\n                },\n                {\n                    \"FirstOfMonth\",\n                    type date\n                },\n                {\n                    \"LastOfMonth\",\n                    type date\n                },\n                {\n                    \"FirstOfNextMonth\",\n                    type date\n                },\n                {\n                    \"LastOfNextMonth\",\n                    type date\n                },\n                {\n                    \"Quarter\",\n                    Int64.Type\n                },\n                {\n                    \"FirstOfQuarter\",\n                    type date\n                },\n                {\n                    \"LastOfQuarter\",\n                    type date\n                },\n                {\n                    \"Year\",\n                    Int64.Type\n                },\n                {\n                    \"ISOYear\",\n                    Int64.Type\n                },\n                {\n                    \"FirstOfYear\",\n                    type date\n                },\n                {\n                    \"LastOfYear\",\n                    type date\n                },\n                {\n                    \"IsLeapYear\",\n                    Int64.Type\n                },\n                {\n                    \"Has53Weeks\",\n                    Int64.Type\n                },\n                {\n                    \"Has53ISOWeeks\",\n                    Int64.Type\n                },\n                {\n                    \"YYYYMMDDKey\",\n                    Int64.Type\n                }\n            }\n        )\nin\n    #\"Changed column type\";\r\nshared DimEmployee = let\n    Source = fxGetFile(\"DimEmployee.csv\"),\n    #\"Changed column type\" =\n        Table.TransformColumnTypes(\n            Source,\n            {\n                {\n                    \"EmployeeKey\",\n                    Int64.Type\n                },\n                {\n                    \"FirstName\",\n                    type text\n                },\n                {\n                    \"LastName\",\n                    type text\n                },\n                {\n                    \"MiddleName\",\n                    type text\n                },\n                {\n                    \"Title\",\n                    type text\n                },\n                {\n                    \"HireDate\",\n                    type date\n                },\n                {\n                    \"BirthDate\",\n                    type date\n                },\n                {\n                    \"EmailAddress\",\n                    type text\n                },\n                {\n                    \"Phone\",\n                    type text\n                },\n                {\n                    \"MaritalStatus\",\n                    type text\n                },\n                {\n                    \"EmergencyContactName\",\n                    type text\n                },\n                {\n                    \"EmergencyContactPhone\",\n                    type text\n                },\n                {\n                    \"SalariedFlag\",\n                    Int64.Type\n                },\n                {\n                    \"Gender\",\n                    type text\n                },\n                {\n                    \"PayFrequency\",\n                    Int64.Type\n                },\n                {\n                    \"BaseRate\",\n                    type number\n                },\n                {\n                    \"VacationHours\",\n                    Int64.Type\n                },\n                {\n                    \"SalesPersonFlag\",\n                    Int64.Type\n                },\n                {\n                    \"DepartmentName\",\n                    type text\n                },\n                {\n                    \"StartDate\",\n                    type date\n                },\n                {\n                    \"EndDate\",\n                    type date\n                },\n                {\n                    \"StoreKey\",\n                    Int64.Type\n                }\n            }\n        )\nin\n    #\"Changed column type\";\r\nshared DimStore = let\n    Source = fxGetFile(\"DimStore.csv\"),\n    #\"Changed column type\" =\n        Table.TransformColumnTypes(\n            Source,\n            {\n                {\n                    \"StoreKey\",\n                    Int64.Type\n                },\n                {\n                    \"GeographyKey\",\n                    Int64.Type\n                },\n                {\n                    \"StoreManager\",\n                    Int64.Type\n                },\n                {\n                    \"StoreType\",\n                    type text\n                },\n                {\n                    \"StoreName\",\n                    type text\n                },\n                {\n                    \"StoreDescription\",\n                    type text\n                },\n                {\n                    \"Status\",\n                    type text\n                },\n                {\n                    \"OpenDate\",\n                    type datetime\n                },\n                {\n                    \"CloseDate\",\n                    type datetime\n                },\n                {\n                    \"EntityKey\",\n                    Int64.Type\n                },\n                {\n                    \"ZipCode\",\n                    Int64.Type\n                },\n                {\n                    \"ZipCodeExtension\",\n                    Int64.Type\n                },\n                {\n                    \"StorePhone\",\n                    type text\n                },\n                {\n                    \"StoreFax\",\n                    type text\n                },\n                {\n                    \"AddressLine1\",\n                    type text\n                },\n                {\n                    \"AddressLine2\",\n                    type text\n                },\n                {\n                    \"CloseReason\",\n                    type text\n                },\n                {\n                    \"SellingAreaSize\",\n                    Int64.Type\n                },\n                {\n                    \"LastRemodelDate\",\n                    type datetime\n                },\n                {\n                    \"GeoLocation\",\n                    type text\n                },\n                {\n                    \"Geometry\",\n                    type text\n                }\n            }\n        )\nin\n    #\"Changed column type\";\r\nshared fxGetFile = let\n    fxGetFile =\n        (#\"File Name\" as text) =>\n            let\n                webAddress = \"https://raw.githubusercontent.com/microsoft/pbiworkshops/main/Day%20After%20Dashboard%20in%20a%20Day/Source_Files\",\n                Source =\n                    if\n                        Text.AfterDelimiter(#\"File Name\", \".\")\n                        = \"csv\"\n                    then\n                        Table.PromoteHeaders(\n                            Csv.Document(\n                                Web.Contents(\n                                    webAddress,\n                                    [\n                                        RelativePath = #\"File Name\",\n                                        ManualStatusHandling = {\n                                            404\n                                        }\n                                    ]\n                                ),\n                                [\n                                    Delimiter = \"|\",\n                                    Encoding = 65001,\n                                    QuoteStyle = QuoteStyle.None\n                                ]\n                            )\n                        )\n                    else\n                        Parquet.Document(\n                            Binary.Buffer(\n                                Web.Contents(\n                                    webAddress,\n                                    [\n                                        RelativePath = #\"File Name\",\n                                        ManualStatusHandling = {\n                                            404\n                                        }\n                                    ]\n                                )\n                            ),\n                            [\n                                Compression = Compression.Snappy,\n                                LegacyColumnNameEncoding = false,\n                                MaxDepth = null\n                            ]\n                        )\n            in\n                Source,\n    Documentation_Meta = [\n        Documentation.Name = \"Day After Dashboard in a Day - Sample data\",\n        Documentation.Description = \"Obtains the source files from the GitHub repository for Day After Dashboard in a Day. Short link: https://aka.ms/pbiworkshops\"\n    ],\n    #\"Add Documentation\" =\n        Value.ReplaceType(\n            fxGetFile,\n            Value.ReplaceMetadata(\n                Value.Type(fxGetFile),\n                Documentation_Meta\n            )\n        )\nin\n    #\"Add Documentation\";\r\nshared fxGetFact = let\n    fxGetFact = () =>\nlet\n    // A function that accept a file number value and concatenates text\n    fileNameUpdate =\n        (#\"File number\" as number) as text =>\n            let\n                Source =\n                    Text.Combine(\n                        {\n                            \"FactOnlineSales_\",\n                            Text.From(#\"File number\"),\n                            \".parquet\"\n                        }\n                    )\n            in\n                Source,\n    tableReturn = [\n        fileCount = 1,\n        fileName = fileNameUpdate(fileCount),\n        data = fxGetFile(fileName)\n    ],\n    Source =\n        List.Generate(\n            () => tableReturn,\n            each try not Table.IsEmpty([data]) otherwise false,\n            each\n                [\n                    fileCount = [fileCount] + 1,\n                    fileName = fileNameUpdate(fileCount),\n                    data = try fxGetFile(fileName) otherwise #table({}, {})\n                ]\n        ),\n    #\"Converted to table\" =\n        Table.FromList(\n            Source,\n            Splitter.SplitByNothing(),\n            null,\n            null,\n            ExtraValues.Error\n        ),\n    #\"Expanded Column1\" =\n        Table.ExpandRecordColumn(\n            #\"Converted to table\",\n            \"Column1\",\n            {\n                \"fileCount\",\n                \"fileName\",\n                \"data\"\n            },\n            {\n                \"fileCount\",\n                \"fileName\",\n                \"data\"\n            }\n        ),\n    #\"Removed other columns\" =\n        Table.SelectColumns(\n            #\"Expanded Column1\",\n            {\"data\"}\n        ),\n    #\"Expanded data\" =\n        Table.ExpandTableColumn(\n            #\"Removed other columns\",\n            \"data\",\n            {\n                \"OnlineSalesKey\",\n                \"DateKey\",\n                \"DeliveryDate\",\n                \"StoreKey\",\n                \"ProductKey\",\n                \"CustomerKey\",\n                \"SalesQuantity\",\n                \"SalesAmount\",\n                \"ReturnQuantity\",\n                \"ReturnAmount\",\n                \"DiscountQuantity\",\n                \"DiscountAmount\"\n            },\n            {\n                \"OnlineSalesKey\",\n                \"DateKey\",\n                \"DeliveryDate\",\n                \"StoreKey\",\n                \"ProductKey\",\n                \"CustomerKey\",\n                \"SalesQuantity\",\n                \"SalesAmount\",\n                \"ReturnQuantity\",\n                \"ReturnAmount\",\n                \"DiscountQuantity\",\n                \"DiscountAmount\"\n            }\n        )\nin\n  #\"Expanded data\",\n  Documentation_Meta = [\n        Documentation.Name = \"Day After Dashboard in a Day - Sample data\",\n        Documentation.Description = \"Obtains the source files from the GitHub repository for Day After Dashboard in a Day. Short link: https://aka.ms/pbiworkshops\"\n    ],\n    #\"Add Documentation\" =\n        Value.ReplaceType(\n            fxGetFact,\n            Value.ReplaceMetadata(\n                Value.Type(fxGetFact),\n                Documentation_Meta\n            )\n        )\nin\n    #\"Add Documentation\";\r\n",
    "connectionOverrides": [
      {
        "path": "https://raw.githubusercontent.com/microsoft/pbiworkshops/main/Day%20After%20Dashboard%20in%20a%20Day/Source_Files",
        "kind": "Web",
        "provider": "CdsA",
        "authenticationKind": null,
        "environmentName": null,
        "apiName": null,
        "connectionName": "a1cdb305-5736-4a4c-be73-0cc5588194a7",
        "audience": null
      }
    ]
  },
  "annotations": [{ "name": "pbi:QueryGroups", "value": "[]" }],
  "entities": [
    {
      "$type": "LocalEntity",
      "name": "DimProduct_raw",
      "description": "Description when connecting.",
      "pbi:refreshPolicy": {
        "$type": "FullRefreshPolicy",
        "location": "DimProduct_raw.csv"
      },
      "attributes": [
        { "name": "ProductKey", "dataType": "int64" },
        { "name": "ProductLabel", "dataType": "int64" },
        { "name": "ProductName", "dataType": "string" },
        { "name": "ProductDescription", "dataType": "string" },
        { "name": "ProductSubcategoryKey", "dataType": "int64" },
        { "name": "Manufacturer", "dataType": "string" },
        { "name": "BrandName", "dataType": "string" },
        { "name": "ClassID", "dataType": "int64" },
        { "name": "ClassName", "dataType": "string" },
        { "name": "StyleID", "dataType": "int64" },
        { "name": "StyleName", "dataType": "string" },
        { "name": "ColorID", "dataType": "int64" },
        { "name": "ColorName", "dataType": "string" },
        { "name": "Size", "dataType": "string" },
        { "name": "Weight", "dataType": "double" },
        { "name": "WeightUnitMeasureID", "dataType": "string" },
        { "name": "UnitOfMeasureID", "dataType": "int64" },
        { "name": "UnitOfMeasureName", "dataType": "string" },
        { "name": "StockTypeID", "dataType": "int64" },
        { "name": "StockTypeName", "dataType": "string" },
        { "name": "UnitCost", "dataType": "double" },
        { "name": "UnitPrice", "dataType": "double" }
      ]
    },
    {
      "$type": "LocalEntity",
      "name": "DimProductCategory_raw",
      "description": "",
      "pbi:refreshPolicy": {
        "$type": "FullRefreshPolicy",
        "location": "DimProductCategory_raw.csv"
      },
      "attributes": [
        { "name": "ProductCategoryKey", "dataType": "int64" },
        { "name": "ProductCategoryLabel", "dataType": "int64" },
        { "name": "ProductCategoryName", "dataType": "string" },
        { "name": "ProductCategoryDescription", "dataType": "string" }
      ]
    },
    {
      "$type": "LocalEntity",
      "name": "DimProductSubcategory_raw",
      "description": "",
      "pbi:refreshPolicy": {
        "$type": "FullRefreshPolicy",
        "location": "DimProductSubcategory_raw.csv"
      },
      "attributes": [
        { "name": "ProductSubcategoryKey", "dataType": "int64" },
        { "name": "ProductSubcategoryLabel", "dataType": "int64" },
        { "name": "ProductSubcategoryName", "dataType": "string" },
        { "name": "ProductSubcategoryDescription", "dataType": "string" },
        { "name": "ProductCategoryKey", "dataType": "int64" }
      ]
    },
    {
      "$type": "LocalEntity",
      "name": "DimCustomer_raw",
      "description": "",
      "pbi:refreshPolicy": {
        "$type": "FullRefreshPolicy",
        "location": "DimCustomer_raw.csv"
      },
      "attributes": [
        { "name": "CustomerKey", "dataType": "int64" },
        { "name": "GeographyKey", "dataType": "int64" },
        { "name": "FirstName", "dataType": "string" },
        { "name": "MiddleName", "dataType": "string" },
        { "name": "LastName", "dataType": "string" },
        { "name": "BirthDate", "dataType": "date" },
        { "name": "MaritalStatus", "dataType": "string" },
        { "name": "Suffix", "dataType": "string" },
        { "name": "Title", "dataType": "string" },
        { "name": "EmailAddress", "dataType": "string" },
        { "name": "YearlyIncome", "dataType": "int64" },
        { "name": "Education", "dataType": "string" },
        { "name": "Occupation", "dataType": "string" },
        { "name": "AddressLine1", "dataType": "string" },
        { "name": "AddressLine2", "dataType": "string" },
        { "name": "Phone", "dataType": "string" },
        { "name": "DateFirstPurchase", "dataType": "date" },
        { "name": "CustomerType", "dataType": "string" }
      ]
    },
    {
      "$type": "LocalEntity",
      "name": "DimGeography_raw",
      "description": "",
      "pbi:refreshPolicy": {
        "$type": "FullRefreshPolicy",
        "location": "DimGeography_raw.csv"
      },
      "attributes": [
        { "name": "GeographyKey", "dataType": "int64" },
        { "name": "GeographyType", "dataType": "string" },
        { "name": "ContinentName", "dataType": "string" },
        { "name": "CityName", "dataType": "string" },
        { "name": "StateProvinceName", "dataType": "string" },
        { "name": "RegionCountryName", "dataType": "string" },
        { "name": "Geometry", "dataType": "string" }
      ]
    },
    {
      "$type": "LocalEntity",
      "name": "DimDate",
      "description": "",
      "pbi:refreshPolicy": {
        "$type": "FullRefreshPolicy",
        "location": "DimDate.csv"
      },
      "attributes": [
        { "name": "DateKey", "dataType": "date" },
        { "name": "Day", "dataType": "int64" },
        { "name": "DaySuffix", "dataType": "string" },
        { "name": "DayName", "dataType": "string" },
        { "name": "DayOfWeek", "dataType": "int64" },
        { "name": "DayOfWeekInMonth", "dataType": "int64" },
        { "name": "DayOfYear", "dataType": "int64" },
        { "name": "IsWeekend", "dataType": "int64" },
        { "name": "Week", "dataType": "int64" },
        { "name": "ISOweek", "dataType": "int64" },
        { "name": "FirstOfWeek", "dataType": "date" },
        { "name": "LastOfWeek", "dataType": "date" },
        { "name": "WeekOfMonth", "dataType": "int64" },
        { "name": "Month", "dataType": "int64" },
        { "name": "MonthName", "dataType": "string" },
        { "name": "FirstOfMonth", "dataType": "date" },
        { "name": "LastOfMonth", "dataType": "date" },
        { "name": "FirstOfNextMonth", "dataType": "date" },
        { "name": "LastOfNextMonth", "dataType": "date" },
        { "name": "Quarter", "dataType": "int64" },
        { "name": "FirstOfQuarter", "dataType": "date" },
        { "name": "LastOfQuarter", "dataType": "date" },
        { "name": "Year", "dataType": "int64" },
        { "name": "ISOYear", "dataType": "int64" },
        { "name": "FirstOfYear", "dataType": "date" },
        { "name": "LastOfYear", "dataType": "date" },
        { "name": "IsLeapYear", "dataType": "int64" },
        { "name": "Has53Weeks", "dataType": "int64" },
        { "name": "Has53ISOWeeks", "dataType": "int64" },
        { "name": "YYYYMMDDKey", "dataType": "int64" }
      ]
    },
    {
      "$type": "LocalEntity",
      "name": "DimEmployee",
      "description": "",
      "pbi:refreshPolicy": {
        "$type": "FullRefreshPolicy",
        "location": "DimEmployee.csv"
      },
      "attributes": [
        { "name": "EmployeeKey", "dataType": "int64" },
        { "name": "FirstName", "dataType": "string" },
        { "name": "LastName", "dataType": "string" },
        { "name": "MiddleName", "dataType": "string" },
        { "name": "Title", "dataType": "string" },
        { "name": "HireDate", "dataType": "date" },
        { "name": "BirthDate", "dataType": "date" },
        { "name": "EmailAddress", "dataType": "string" },
        { "name": "Phone", "dataType": "string" },
        { "name": "MaritalStatus", "dataType": "string" },
        { "name": "EmergencyContactName", "dataType": "string" },
        { "name": "EmergencyContactPhone", "dataType": "string" },
        { "name": "SalariedFlag", "dataType": "int64" },
        { "name": "Gender", "dataType": "string" },
        { "name": "PayFrequency", "dataType": "int64" },
        { "name": "BaseRate", "dataType": "double" },
        { "name": "VacationHours", "dataType": "int64" },
        { "name": "SalesPersonFlag", "dataType": "int64" },
        { "name": "DepartmentName", "dataType": "string" },
        { "name": "StartDate", "dataType": "date" },
        { "name": "EndDate", "dataType": "date" },
        { "name": "StoreKey", "dataType": "int64" }
      ]
    },
    {
      "$type": "LocalEntity",
      "name": "DimStore",
      "description": "",
      "pbi:refreshPolicy": {
        "$type": "FullRefreshPolicy",
        "location": "DimStore.csv"
      },
      "attributes": [
        { "name": "StoreKey", "dataType": "int64" },
        { "name": "GeographyKey", "dataType": "int64" },
        { "name": "StoreManager", "dataType": "int64" },
        { "name": "StoreType", "dataType": "string" },
        { "name": "StoreName", "dataType": "string" },
        { "name": "StoreDescription", "dataType": "string" },
        { "name": "Status", "dataType": "string" },
        { "name": "OpenDate", "dataType": "dateTime" },
        { "name": "CloseDate", "dataType": "dateTime" },
        { "name": "EntityKey", "dataType": "int64" },
        { "name": "ZipCode", "dataType": "int64" },
        { "name": "ZipCodeExtension", "dataType": "int64" },
        { "name": "StorePhone", "dataType": "string" },
        { "name": "StoreFax", "dataType": "string" },
        { "name": "AddressLine1", "dataType": "string" },
        { "name": "AddressLine2", "dataType": "string" },
        { "name": "CloseReason", "dataType": "string" },
        { "name": "SellingAreaSize", "dataType": "int64" },
        { "name": "LastRemodelDate", "dataType": "dateTime" },
        { "name": "GeoLocation", "dataType": "string" },
        { "name": "Geometry", "dataType": "string" }
      ]
    }
  ]
}
